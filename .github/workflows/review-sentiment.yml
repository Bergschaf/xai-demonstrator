name: Review Sentiment pipeline

on:
  push:
    paths:
      - 'review-sentiment/**'


jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          set -e
          cd ./review-sentiment
          echo $PWD
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          set -e
          cd ./review-sentiment
          echo $PWD
          pip install pytest
          pytest

  build:
    runs-on: ubuntu-latest
    needs: test-backend
    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.1.4
      with:
        node-version: 12
    - name: Build frontend
      run: |
        set -e
        cd ./review-sentiment/sentiment-frontend
        echo $PWD
        npm install
        npm run build
        mkdir ../sentiment-backend/static
        cp -r ./dist/* ../sentiment-backend/static/
    - name: Create container and publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: xai-demonstrator/review-sentiment-service
        username: ${{ secrets.GHCR_PAT_OWNER }}
        password: ${{ secrets.GHCR_WRITE }}
        registry: ghcr.io
        workdir: review-sentiment/
        
  deploy:
     runs-on: ubuntu-latest
     needs: build
     steps:
       - uses: actions/checkout@master
       - name: Copy docker-compose.yml to test server
         uses: appleboy/scp-action@v0.1.1
         with:
           host: ${{ secrets.TEST_HOST }}
           username: ${{ secrets.TEST_USER }}
           key: ${{ secrets.TEST_KEY }}
           source: "deployment/docker-compose.yml"
           target: "test-deployment"
           rm: true
       - name: SSH Remote Commands
         uses: appleboy/ssh-action@v0.1.3
         with:
           host: ${{ secrets.TEST_HOST }}
           username: ${{ secrets.TEST_USER }}
           key: ${{ secrets.TEST_KEY }}
           script: |
             set -e
             export CR_PAT=${{ secrets.GHCR_READ }}
             echo $CR_PAT | sudo docker login ghcr.io -u ${{ secrets.GHCR_PAT_OWNER }} --password-stdin
             cd test-deployment/deployment
             sudo docker pull ghcr.io/xai-demonstrator/review-sentiment-service:latest
             sudo docker logout
             unset CR_PAT
             sudo docker-compose down
             sudo docker-compose up -d
       - name: Slack Notification
         uses: rtCamp/action-slack-notify@master
         env:
            SLACK_CHANNEL: xai-tech
            SLACK_MESSAGE: 'Successfully deployed a new version to http://test.xaidemo.de :rocket:'
            SLACK_TITLE: New Test Deployment
            SLACK_USERNAME: Deployment Monitor
            SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            MSG_MINIMAL: true
